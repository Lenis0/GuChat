// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_message_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_message_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_message_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_message_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_message_2eproto;
namespace message {
class AddFriendReq;
struct AddFriendReqDefaultTypeInternal;
extern AddFriendReqDefaultTypeInternal _AddFriendReq_default_instance_;
class AddFriendRsp;
struct AddFriendRspDefaultTypeInternal;
extern AddFriendRspDefaultTypeInternal _AddFriendRsp_default_instance_;
class AuthFriendReq;
struct AuthFriendReqDefaultTypeInternal;
extern AuthFriendReqDefaultTypeInternal _AuthFriendReq_default_instance_;
class AuthFriendRsp;
struct AuthFriendRspDefaultTypeInternal;
extern AuthFriendRspDefaultTypeInternal _AuthFriendRsp_default_instance_;
class RplyFriendReq;
struct RplyFriendReqDefaultTypeInternal;
extern RplyFriendReqDefaultTypeInternal _RplyFriendReq_default_instance_;
class RplyFriendRsp;
struct RplyFriendRspDefaultTypeInternal;
extern RplyFriendRspDefaultTypeInternal _RplyFriendRsp_default_instance_;
class SendChatMsgReq;
struct SendChatMsgReqDefaultTypeInternal;
extern SendChatMsgReqDefaultTypeInternal _SendChatMsgReq_default_instance_;
class SendChatMsgRsp;
struct SendChatMsgRspDefaultTypeInternal;
extern SendChatMsgRspDefaultTypeInternal _SendChatMsgRsp_default_instance_;
class TextChatData;
struct TextChatDataDefaultTypeInternal;
extern TextChatDataDefaultTypeInternal _TextChatData_default_instance_;
class TextChatMsgReq;
struct TextChatMsgReqDefaultTypeInternal;
extern TextChatMsgReqDefaultTypeInternal _TextChatMsgReq_default_instance_;
class TextChatMsgRsp;
struct TextChatMsgRspDefaultTypeInternal;
extern TextChatMsgRspDefaultTypeInternal _TextChatMsgRsp_default_instance_;
}  // namespace message
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace message {

// ===================================================================


// -------------------------------------------------------------------

class TextChatData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.TextChatData) */ {
 public:
  inline TextChatData() : TextChatData(nullptr) {}
  ~TextChatData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TextChatData(::google::protobuf::internal::ConstantInitialized);

  inline TextChatData(const TextChatData& from)
      : TextChatData(nullptr, from) {}
  TextChatData(TextChatData&& from) noexcept
    : TextChatData() {
    *this = ::std::move(from);
  }

  inline TextChatData& operator=(const TextChatData& from) {
    CopyFrom(from);
    return *this;
  }
  inline TextChatData& operator=(TextChatData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TextChatData& default_instance() {
    return *internal_default_instance();
  }
  static inline const TextChatData* internal_default_instance() {
    return reinterpret_cast<const TextChatData*>(
               &_TextChatData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(TextChatData& a, TextChatData& b) {
    a.Swap(&b);
  }
  inline void Swap(TextChatData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TextChatData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TextChatData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TextChatData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TextChatData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TextChatData& from) {
    TextChatData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TextChatData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "message.TextChatData";
  }
  protected:
  explicit TextChatData(::google::protobuf::Arena* arena);
  TextChatData(::google::protobuf::Arena* arena, const TextChatData& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgidFieldNumber = 1,
    kMsgcontentFieldNumber = 2,
  };
  // string msgid = 1;
  void clear_msgid() ;
  const std::string& msgid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msgid(Arg_&& arg, Args_... args);
  std::string* mutable_msgid();
  PROTOBUF_NODISCARD std::string* release_msgid();
  void set_allocated_msgid(std::string* value);

  private:
  const std::string& _internal_msgid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msgid(
      const std::string& value);
  std::string* _internal_mutable_msgid();

  public:
  // string msgcontent = 2;
  void clear_msgcontent() ;
  const std::string& msgcontent() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msgcontent(Arg_&& arg, Args_... args);
  std::string* mutable_msgcontent();
  PROTOBUF_NODISCARD std::string* release_msgcontent();
  void set_allocated_msgcontent(std::string* value);

  private:
  const std::string& _internal_msgcontent() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msgcontent(
      const std::string& value);
  std::string* _internal_mutable_msgcontent();

  public:
  // @@protoc_insertion_point(class_scope:message.TextChatData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      44, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr msgid_;
    ::google::protobuf::internal::ArenaStringPtr msgcontent_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class SendChatMsgRsp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.SendChatMsgRsp) */ {
 public:
  inline SendChatMsgRsp() : SendChatMsgRsp(nullptr) {}
  ~SendChatMsgRsp() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SendChatMsgRsp(::google::protobuf::internal::ConstantInitialized);

  inline SendChatMsgRsp(const SendChatMsgRsp& from)
      : SendChatMsgRsp(nullptr, from) {}
  SendChatMsgRsp(SendChatMsgRsp&& from) noexcept
    : SendChatMsgRsp() {
    *this = ::std::move(from);
  }

  inline SendChatMsgRsp& operator=(const SendChatMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendChatMsgRsp& operator=(SendChatMsgRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendChatMsgRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendChatMsgRsp* internal_default_instance() {
    return reinterpret_cast<const SendChatMsgRsp*>(
               &_SendChatMsgRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(SendChatMsgRsp& a, SendChatMsgRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(SendChatMsgRsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendChatMsgRsp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendChatMsgRsp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SendChatMsgRsp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendChatMsgRsp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SendChatMsgRsp& from) {
    SendChatMsgRsp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendChatMsgRsp* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "message.SendChatMsgRsp";
  }
  protected:
  explicit SendChatMsgRsp(::google::protobuf::Arena* arena);
  SendChatMsgRsp(::google::protobuf::Arena* arena, const SendChatMsgRsp& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorFieldNumber = 1,
    kFromuidFieldNumber = 2,
    kTouidFieldNumber = 3,
  };
  // int32 error = 1;
  void clear_error() ;
  ::int32_t error() const;
  void set_error(::int32_t value);

  private:
  ::int32_t _internal_error() const;
  void _internal_set_error(::int32_t value);

  public:
  // int32 fromuid = 2;
  void clear_fromuid() ;
  ::int32_t fromuid() const;
  void set_fromuid(::int32_t value);

  private:
  ::int32_t _internal_fromuid() const;
  void _internal_set_fromuid(::int32_t value);

  public:
  // int32 touid = 3;
  void clear_touid() ;
  ::int32_t touid() const;
  void set_touid(::int32_t value);

  private:
  ::int32_t _internal_touid() const;
  void _internal_set_touid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.SendChatMsgRsp)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t error_;
    ::int32_t fromuid_;
    ::int32_t touid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class SendChatMsgReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.SendChatMsgReq) */ {
 public:
  inline SendChatMsgReq() : SendChatMsgReq(nullptr) {}
  ~SendChatMsgReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SendChatMsgReq(::google::protobuf::internal::ConstantInitialized);

  inline SendChatMsgReq(const SendChatMsgReq& from)
      : SendChatMsgReq(nullptr, from) {}
  SendChatMsgReq(SendChatMsgReq&& from) noexcept
    : SendChatMsgReq() {
    *this = ::std::move(from);
  }

  inline SendChatMsgReq& operator=(const SendChatMsgReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendChatMsgReq& operator=(SendChatMsgReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendChatMsgReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendChatMsgReq* internal_default_instance() {
    return reinterpret_cast<const SendChatMsgReq*>(
               &_SendChatMsgReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SendChatMsgReq& a, SendChatMsgReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SendChatMsgReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendChatMsgReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendChatMsgReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SendChatMsgReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendChatMsgReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SendChatMsgReq& from) {
    SendChatMsgReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendChatMsgReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "message.SendChatMsgReq";
  }
  protected:
  explicit SendChatMsgReq(::google::protobuf::Arena* arena);
  SendChatMsgReq(::google::protobuf::Arena* arena, const SendChatMsgReq& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 3,
    kFromuidFieldNumber = 1,
    kTouidFieldNumber = 2,
  };
  // string message = 3;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // int32 fromuid = 1;
  void clear_fromuid() ;
  ::int32_t fromuid() const;
  void set_fromuid(::int32_t value);

  private:
  ::int32_t _internal_fromuid() const;
  void _internal_set_fromuid(::int32_t value);

  public:
  // int32 touid = 2;
  void clear_touid() ;
  ::int32_t touid() const;
  void set_touid(::int32_t value);

  private:
  ::int32_t _internal_touid() const;
  void _internal_set_touid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.SendChatMsgReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      38, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::int32_t fromuid_;
    ::int32_t touid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class RplyFriendRsp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.RplyFriendRsp) */ {
 public:
  inline RplyFriendRsp() : RplyFriendRsp(nullptr) {}
  ~RplyFriendRsp() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RplyFriendRsp(::google::protobuf::internal::ConstantInitialized);

  inline RplyFriendRsp(const RplyFriendRsp& from)
      : RplyFriendRsp(nullptr, from) {}
  RplyFriendRsp(RplyFriendRsp&& from) noexcept
    : RplyFriendRsp() {
    *this = ::std::move(from);
  }

  inline RplyFriendRsp& operator=(const RplyFriendRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline RplyFriendRsp& operator=(RplyFriendRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RplyFriendRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const RplyFriendRsp* internal_default_instance() {
    return reinterpret_cast<const RplyFriendRsp*>(
               &_RplyFriendRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(RplyFriendRsp& a, RplyFriendRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(RplyFriendRsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RplyFriendRsp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RplyFriendRsp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RplyFriendRsp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RplyFriendRsp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RplyFriendRsp& from) {
    RplyFriendRsp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RplyFriendRsp* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "message.RplyFriendRsp";
  }
  protected:
  explicit RplyFriendRsp(::google::protobuf::Arena* arena);
  RplyFriendRsp(::google::protobuf::Arena* arena, const RplyFriendRsp& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorFieldNumber = 1,
    kRplyuidFieldNumber = 2,
    kTouidFieldNumber = 3,
  };
  // int32 error = 1;
  void clear_error() ;
  ::int32_t error() const;
  void set_error(::int32_t value);

  private:
  ::int32_t _internal_error() const;
  void _internal_set_error(::int32_t value);

  public:
  // int32 rplyuid = 2;
  void clear_rplyuid() ;
  ::int32_t rplyuid() const;
  void set_rplyuid(::int32_t value);

  private:
  ::int32_t _internal_rplyuid() const;
  void _internal_set_rplyuid(::int32_t value);

  public:
  // int32 touid = 3;
  void clear_touid() ;
  ::int32_t touid() const;
  void set_touid(::int32_t value);

  private:
  ::int32_t _internal_touid() const;
  void _internal_set_touid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.RplyFriendRsp)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t error_;
    ::int32_t rplyuid_;
    ::int32_t touid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class RplyFriendReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.RplyFriendReq) */ {
 public:
  inline RplyFriendReq() : RplyFriendReq(nullptr) {}
  ~RplyFriendReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RplyFriendReq(::google::protobuf::internal::ConstantInitialized);

  inline RplyFriendReq(const RplyFriendReq& from)
      : RplyFriendReq(nullptr, from) {}
  RplyFriendReq(RplyFriendReq&& from) noexcept
    : RplyFriendReq() {
    *this = ::std::move(from);
  }

  inline RplyFriendReq& operator=(const RplyFriendReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline RplyFriendReq& operator=(RplyFriendReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RplyFriendReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const RplyFriendReq* internal_default_instance() {
    return reinterpret_cast<const RplyFriendReq*>(
               &_RplyFriendReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(RplyFriendReq& a, RplyFriendReq& b) {
    a.Swap(&b);
  }
  inline void Swap(RplyFriendReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RplyFriendReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RplyFriendReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RplyFriendReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RplyFriendReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RplyFriendReq& from) {
    RplyFriendReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RplyFriendReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "message.RplyFriendReq";
  }
  protected:
  explicit RplyFriendReq(::google::protobuf::Arena* arena);
  RplyFriendReq(::google::protobuf::Arena* arena, const RplyFriendReq& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRplyuidFieldNumber = 1,
    kAgreeFieldNumber = 2,
    kTouidFieldNumber = 3,
  };
  // int32 rplyuid = 1;
  void clear_rplyuid() ;
  ::int32_t rplyuid() const;
  void set_rplyuid(::int32_t value);

  private:
  ::int32_t _internal_rplyuid() const;
  void _internal_set_rplyuid(::int32_t value);

  public:
  // bool agree = 2;
  void clear_agree() ;
  bool agree() const;
  void set_agree(bool value);

  private:
  bool _internal_agree() const;
  void _internal_set_agree(bool value);

  public:
  // int32 touid = 3;
  void clear_touid() ;
  ::int32_t touid() const;
  void set_touid(::int32_t value);

  private:
  ::int32_t _internal_touid() const;
  void _internal_set_touid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.RplyFriendReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t rplyuid_;
    bool agree_;
    ::int32_t touid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class AuthFriendRsp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.AuthFriendRsp) */ {
 public:
  inline AuthFriendRsp() : AuthFriendRsp(nullptr) {}
  ~AuthFriendRsp() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AuthFriendRsp(::google::protobuf::internal::ConstantInitialized);

  inline AuthFriendRsp(const AuthFriendRsp& from)
      : AuthFriendRsp(nullptr, from) {}
  AuthFriendRsp(AuthFriendRsp&& from) noexcept
    : AuthFriendRsp() {
    *this = ::std::move(from);
  }

  inline AuthFriendRsp& operator=(const AuthFriendRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline AuthFriendRsp& operator=(AuthFriendRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AuthFriendRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const AuthFriendRsp* internal_default_instance() {
    return reinterpret_cast<const AuthFriendRsp*>(
               &_AuthFriendRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(AuthFriendRsp& a, AuthFriendRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(AuthFriendRsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AuthFriendRsp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AuthFriendRsp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AuthFriendRsp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AuthFriendRsp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AuthFriendRsp& from) {
    AuthFriendRsp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AuthFriendRsp* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "message.AuthFriendRsp";
  }
  protected:
  explicit AuthFriendRsp(::google::protobuf::Arena* arena);
  AuthFriendRsp(::google::protobuf::Arena* arena, const AuthFriendRsp& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorFieldNumber = 1,
    kFromuidFieldNumber = 2,
    kTouidFieldNumber = 3,
  };
  // int32 error = 1;
  void clear_error() ;
  ::int32_t error() const;
  void set_error(::int32_t value);

  private:
  ::int32_t _internal_error() const;
  void _internal_set_error(::int32_t value);

  public:
  // int32 fromuid = 2;
  void clear_fromuid() ;
  ::int32_t fromuid() const;
  void set_fromuid(::int32_t value);

  private:
  ::int32_t _internal_fromuid() const;
  void _internal_set_fromuid(::int32_t value);

  public:
  // int32 touid = 3;
  void clear_touid() ;
  ::int32_t touid() const;
  void set_touid(::int32_t value);

  private:
  ::int32_t _internal_touid() const;
  void _internal_set_touid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.AuthFriendRsp)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t error_;
    ::int32_t fromuid_;
    ::int32_t touid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class AuthFriendReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.AuthFriendReq) */ {
 public:
  inline AuthFriendReq() : AuthFriendReq(nullptr) {}
  ~AuthFriendReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AuthFriendReq(::google::protobuf::internal::ConstantInitialized);

  inline AuthFriendReq(const AuthFriendReq& from)
      : AuthFriendReq(nullptr, from) {}
  AuthFriendReq(AuthFriendReq&& from) noexcept
    : AuthFriendReq() {
    *this = ::std::move(from);
  }

  inline AuthFriendReq& operator=(const AuthFriendReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline AuthFriendReq& operator=(AuthFriendReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AuthFriendReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const AuthFriendReq* internal_default_instance() {
    return reinterpret_cast<const AuthFriendReq*>(
               &_AuthFriendReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(AuthFriendReq& a, AuthFriendReq& b) {
    a.Swap(&b);
  }
  inline void Swap(AuthFriendReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AuthFriendReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AuthFriendReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AuthFriendReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AuthFriendReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AuthFriendReq& from) {
    AuthFriendReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AuthFriendReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "message.AuthFriendReq";
  }
  protected:
  explicit AuthFriendReq(::google::protobuf::Arena* arena);
  AuthFriendReq(::google::protobuf::Arena* arena, const AuthFriendReq& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFromuidFieldNumber = 1,
    kTouidFieldNumber = 2,
  };
  // int32 fromuid = 1;
  void clear_fromuid() ;
  ::int32_t fromuid() const;
  void set_fromuid(::int32_t value);

  private:
  ::int32_t _internal_fromuid() const;
  void _internal_set_fromuid(::int32_t value);

  public:
  // int32 touid = 2;
  void clear_touid() ;
  ::int32_t touid() const;
  void set_touid(::int32_t value);

  private:
  ::int32_t _internal_touid() const;
  void _internal_set_touid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.AuthFriendReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t fromuid_;
    ::int32_t touid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class AddFriendRsp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.AddFriendRsp) */ {
 public:
  inline AddFriendRsp() : AddFriendRsp(nullptr) {}
  ~AddFriendRsp() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AddFriendRsp(::google::protobuf::internal::ConstantInitialized);

  inline AddFriendRsp(const AddFriendRsp& from)
      : AddFriendRsp(nullptr, from) {}
  AddFriendRsp(AddFriendRsp&& from) noexcept
    : AddFriendRsp() {
    *this = ::std::move(from);
  }

  inline AddFriendRsp& operator=(const AddFriendRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddFriendRsp& operator=(AddFriendRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddFriendRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddFriendRsp* internal_default_instance() {
    return reinterpret_cast<const AddFriendRsp*>(
               &_AddFriendRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AddFriendRsp& a, AddFriendRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(AddFriendRsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddFriendRsp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddFriendRsp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddFriendRsp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddFriendRsp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AddFriendRsp& from) {
    AddFriendRsp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddFriendRsp* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "message.AddFriendRsp";
  }
  protected:
  explicit AddFriendRsp(::google::protobuf::Arena* arena);
  AddFriendRsp(::google::protobuf::Arena* arena, const AddFriendRsp& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorFieldNumber = 1,
    kApplyuidFieldNumber = 2,
    kTouidFieldNumber = 3,
  };
  // int32 error = 1;
  void clear_error() ;
  ::int32_t error() const;
  void set_error(::int32_t value);

  private:
  ::int32_t _internal_error() const;
  void _internal_set_error(::int32_t value);

  public:
  // int32 applyuid = 2;
  void clear_applyuid() ;
  ::int32_t applyuid() const;
  void set_applyuid(::int32_t value);

  private:
  ::int32_t _internal_applyuid() const;
  void _internal_set_applyuid(::int32_t value);

  public:
  // int32 touid = 3;
  void clear_touid() ;
  ::int32_t touid() const;
  void set_touid(::int32_t value);

  private:
  ::int32_t _internal_touid() const;
  void _internal_set_touid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.AddFriendRsp)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t error_;
    ::int32_t applyuid_;
    ::int32_t touid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class AddFriendReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.AddFriendReq) */ {
 public:
  inline AddFriendReq() : AddFriendReq(nullptr) {}
  ~AddFriendReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AddFriendReq(::google::protobuf::internal::ConstantInitialized);

  inline AddFriendReq(const AddFriendReq& from)
      : AddFriendReq(nullptr, from) {}
  AddFriendReq(AddFriendReq&& from) noexcept
    : AddFriendReq() {
    *this = ::std::move(from);
  }

  inline AddFriendReq& operator=(const AddFriendReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddFriendReq& operator=(AddFriendReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddFriendReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddFriendReq* internal_default_instance() {
    return reinterpret_cast<const AddFriendReq*>(
               &_AddFriendReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AddFriendReq& a, AddFriendReq& b) {
    a.Swap(&b);
  }
  inline void Swap(AddFriendReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddFriendReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddFriendReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddFriendReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddFriendReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AddFriendReq& from) {
    AddFriendReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddFriendReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "message.AddFriendReq";
  }
  protected:
  explicit AddFriendReq(::google::protobuf::Arena* arena);
  AddFriendReq(::google::protobuf::Arena* arena, const AddFriendReq& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kDescFieldNumber = 3,
    kIconFieldNumber = 4,
    kNicknameFieldNumber = 5,
    kApplyuidFieldNumber = 1,
    kSexFieldNumber = 6,
    kTouidFieldNumber = 7,
  };
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string desc = 3;
  void clear_desc() ;
  const std::string& desc() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_desc(Arg_&& arg, Args_... args);
  std::string* mutable_desc();
  PROTOBUF_NODISCARD std::string* release_desc();
  void set_allocated_desc(std::string* value);

  private:
  const std::string& _internal_desc() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_desc(
      const std::string& value);
  std::string* _internal_mutable_desc();

  public:
  // string icon = 4;
  void clear_icon() ;
  const std::string& icon() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_icon(Arg_&& arg, Args_... args);
  std::string* mutable_icon();
  PROTOBUF_NODISCARD std::string* release_icon();
  void set_allocated_icon(std::string* value);

  private:
  const std::string& _internal_icon() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_icon(
      const std::string& value);
  std::string* _internal_mutable_icon();

  public:
  // string nickname = 5;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // int32 applyuid = 1;
  void clear_applyuid() ;
  ::int32_t applyuid() const;
  void set_applyuid(::int32_t value);

  private:
  ::int32_t _internal_applyuid() const;
  void _internal_set_applyuid(::int32_t value);

  public:
  // int32 sex = 6;
  void clear_sex() ;
  ::int32_t sex() const;
  void set_sex(::int32_t value);

  private:
  ::int32_t _internal_sex() const;
  void _internal_set_sex(::int32_t value);

  public:
  // int32 touid = 7;
  void clear_touid() ;
  ::int32_t touid() const;
  void set_touid(::int32_t value);

  private:
  ::int32_t _internal_touid() const;
  void _internal_set_touid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.AddFriendReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      49, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr desc_;
    ::google::protobuf::internal::ArenaStringPtr icon_;
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::int32_t applyuid_;
    ::int32_t sex_;
    ::int32_t touid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class TextChatMsgRsp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.TextChatMsgRsp) */ {
 public:
  inline TextChatMsgRsp() : TextChatMsgRsp(nullptr) {}
  ~TextChatMsgRsp() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TextChatMsgRsp(::google::protobuf::internal::ConstantInitialized);

  inline TextChatMsgRsp(const TextChatMsgRsp& from)
      : TextChatMsgRsp(nullptr, from) {}
  TextChatMsgRsp(TextChatMsgRsp&& from) noexcept
    : TextChatMsgRsp() {
    *this = ::std::move(from);
  }

  inline TextChatMsgRsp& operator=(const TextChatMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline TextChatMsgRsp& operator=(TextChatMsgRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TextChatMsgRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const TextChatMsgRsp* internal_default_instance() {
    return reinterpret_cast<const TextChatMsgRsp*>(
               &_TextChatMsgRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(TextChatMsgRsp& a, TextChatMsgRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(TextChatMsgRsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TextChatMsgRsp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TextChatMsgRsp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TextChatMsgRsp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TextChatMsgRsp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TextChatMsgRsp& from) {
    TextChatMsgRsp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TextChatMsgRsp* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "message.TextChatMsgRsp";
  }
  protected:
  explicit TextChatMsgRsp(::google::protobuf::Arena* arena);
  TextChatMsgRsp(::google::protobuf::Arena* arena, const TextChatMsgRsp& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTextmsgsFieldNumber = 4,
    kErrorFieldNumber = 1,
    kFromuidFieldNumber = 2,
    kTouidFieldNumber = 3,
  };
  // repeated .message.TextChatData textmsgs = 4;
  int textmsgs_size() const;
  private:
  int _internal_textmsgs_size() const;

  public:
  void clear_textmsgs() ;
  ::message::TextChatData* mutable_textmsgs(int index);
  ::google::protobuf::RepeatedPtrField< ::message::TextChatData >*
      mutable_textmsgs();
  private:
  const ::google::protobuf::RepeatedPtrField<::message::TextChatData>& _internal_textmsgs() const;
  ::google::protobuf::RepeatedPtrField<::message::TextChatData>* _internal_mutable_textmsgs();
  public:
  const ::message::TextChatData& textmsgs(int index) const;
  ::message::TextChatData* add_textmsgs();
  const ::google::protobuf::RepeatedPtrField< ::message::TextChatData >&
      textmsgs() const;
  // int32 error = 1;
  void clear_error() ;
  ::int32_t error() const;
  void set_error(::int32_t value);

  private:
  ::int32_t _internal_error() const;
  void _internal_set_error(::int32_t value);

  public:
  // int32 fromuid = 2;
  void clear_fromuid() ;
  ::int32_t fromuid() const;
  void set_fromuid(::int32_t value);

  private:
  ::int32_t _internal_fromuid() const;
  void _internal_set_fromuid(::int32_t value);

  public:
  // int32 touid = 3;
  void clear_touid() ;
  ::int32_t touid() const;
  void set_touid(::int32_t value);

  private:
  ::int32_t _internal_touid() const;
  void _internal_set_touid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.TextChatMsgRsp)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::message::TextChatData > textmsgs_;
    ::int32_t error_;
    ::int32_t fromuid_;
    ::int32_t touid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class TextChatMsgReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.TextChatMsgReq) */ {
 public:
  inline TextChatMsgReq() : TextChatMsgReq(nullptr) {}
  ~TextChatMsgReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TextChatMsgReq(::google::protobuf::internal::ConstantInitialized);

  inline TextChatMsgReq(const TextChatMsgReq& from)
      : TextChatMsgReq(nullptr, from) {}
  TextChatMsgReq(TextChatMsgReq&& from) noexcept
    : TextChatMsgReq() {
    *this = ::std::move(from);
  }

  inline TextChatMsgReq& operator=(const TextChatMsgReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline TextChatMsgReq& operator=(TextChatMsgReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TextChatMsgReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const TextChatMsgReq* internal_default_instance() {
    return reinterpret_cast<const TextChatMsgReq*>(
               &_TextChatMsgReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(TextChatMsgReq& a, TextChatMsgReq& b) {
    a.Swap(&b);
  }
  inline void Swap(TextChatMsgReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TextChatMsgReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TextChatMsgReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TextChatMsgReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TextChatMsgReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TextChatMsgReq& from) {
    TextChatMsgReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TextChatMsgReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "message.TextChatMsgReq";
  }
  protected:
  explicit TextChatMsgReq(::google::protobuf::Arena* arena);
  TextChatMsgReq(::google::protobuf::Arena* arena, const TextChatMsgReq& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTextmsgsFieldNumber = 3,
    kFromuidFieldNumber = 1,
    kTouidFieldNumber = 2,
  };
  // repeated .message.TextChatData textmsgs = 3;
  int textmsgs_size() const;
  private:
  int _internal_textmsgs_size() const;

  public:
  void clear_textmsgs() ;
  ::message::TextChatData* mutable_textmsgs(int index);
  ::google::protobuf::RepeatedPtrField< ::message::TextChatData >*
      mutable_textmsgs();
  private:
  const ::google::protobuf::RepeatedPtrField<::message::TextChatData>& _internal_textmsgs() const;
  ::google::protobuf::RepeatedPtrField<::message::TextChatData>* _internal_mutable_textmsgs();
  public:
  const ::message::TextChatData& textmsgs(int index) const;
  ::message::TextChatData* add_textmsgs();
  const ::google::protobuf::RepeatedPtrField< ::message::TextChatData >&
      textmsgs() const;
  // int32 fromuid = 1;
  void clear_fromuid() ;
  ::int32_t fromuid() const;
  void set_fromuid(::int32_t value);

  private:
  ::int32_t _internal_fromuid() const;
  void _internal_set_fromuid(::int32_t value);

  public:
  // int32 touid = 2;
  void clear_touid() ;
  ::int32_t touid() const;
  void set_touid(::int32_t value);

  private:
  ::int32_t _internal_touid() const;
  void _internal_set_touid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.TextChatMsgReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::message::TextChatData > textmsgs_;
    ::int32_t fromuid_;
    ::int32_t touid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AddFriendReq

// int32 applyuid = 1;
inline void AddFriendReq::clear_applyuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.applyuid_ = 0;
}
inline ::int32_t AddFriendReq::applyuid() const {
  // @@protoc_insertion_point(field_get:message.AddFriendReq.applyuid)
  return _internal_applyuid();
}
inline void AddFriendReq::set_applyuid(::int32_t value) {
  _internal_set_applyuid(value);
  // @@protoc_insertion_point(field_set:message.AddFriendReq.applyuid)
}
inline ::int32_t AddFriendReq::_internal_applyuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.applyuid_;
}
inline void AddFriendReq::_internal_set_applyuid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.applyuid_ = value;
}

// string name = 2;
inline void AddFriendReq::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& AddFriendReq::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.AddFriendReq.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddFriendReq::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.AddFriendReq.name)
}
inline std::string* AddFriendReq::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:message.AddFriendReq.name)
  return _s;
}
inline const std::string& AddFriendReq::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void AddFriendReq::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* AddFriendReq::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* AddFriendReq::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.AddFriendReq.name)
  return _impl_.name_.Release();
}
inline void AddFriendReq::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.AddFriendReq.name)
}

// string desc = 3;
inline void AddFriendReq::clear_desc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.desc_.ClearToEmpty();
}
inline const std::string& AddFriendReq::desc() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.AddFriendReq.desc)
  return _internal_desc();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddFriendReq::set_desc(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.desc_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.AddFriendReq.desc)
}
inline std::string* AddFriendReq::mutable_desc() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_desc();
  // @@protoc_insertion_point(field_mutable:message.AddFriendReq.desc)
  return _s;
}
inline const std::string& AddFriendReq::_internal_desc() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.desc_.Get();
}
inline void AddFriendReq::_internal_set_desc(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.desc_.Set(value, GetArena());
}
inline std::string* AddFriendReq::_internal_mutable_desc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.desc_.Mutable( GetArena());
}
inline std::string* AddFriendReq::release_desc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.AddFriendReq.desc)
  return _impl_.desc_.Release();
}
inline void AddFriendReq::set_allocated_desc(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.desc_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.desc_.IsDefault()) {
          _impl_.desc_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.AddFriendReq.desc)
}

// string icon = 4;
inline void AddFriendReq::clear_icon() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.icon_.ClearToEmpty();
}
inline const std::string& AddFriendReq::icon() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.AddFriendReq.icon)
  return _internal_icon();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddFriendReq::set_icon(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.icon_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.AddFriendReq.icon)
}
inline std::string* AddFriendReq::mutable_icon() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_icon();
  // @@protoc_insertion_point(field_mutable:message.AddFriendReq.icon)
  return _s;
}
inline const std::string& AddFriendReq::_internal_icon() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.icon_.Get();
}
inline void AddFriendReq::_internal_set_icon(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.icon_.Set(value, GetArena());
}
inline std::string* AddFriendReq::_internal_mutable_icon() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.icon_.Mutable( GetArena());
}
inline std::string* AddFriendReq::release_icon() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.AddFriendReq.icon)
  return _impl_.icon_.Release();
}
inline void AddFriendReq::set_allocated_icon(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.icon_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.icon_.IsDefault()) {
          _impl_.icon_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.AddFriendReq.icon)
}

// string nickname = 5;
inline void AddFriendReq::clear_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nickname_.ClearToEmpty();
}
inline const std::string& AddFriendReq::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.AddFriendReq.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddFriendReq::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.AddFriendReq.nickname)
}
inline std::string* AddFriendReq::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:message.AddFriendReq.nickname)
  return _s;
}
inline const std::string& AddFriendReq::_internal_nickname() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nickname_.Get();
}
inline void AddFriendReq::_internal_set_nickname(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* AddFriendReq::_internal_mutable_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* AddFriendReq::release_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.AddFriendReq.nickname)
  return _impl_.nickname_.Release();
}
inline void AddFriendReq::set_allocated_nickname(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nickname_.IsDefault()) {
          _impl_.nickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.AddFriendReq.nickname)
}

// int32 sex = 6;
inline void AddFriendReq::clear_sex() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sex_ = 0;
}
inline ::int32_t AddFriendReq::sex() const {
  // @@protoc_insertion_point(field_get:message.AddFriendReq.sex)
  return _internal_sex();
}
inline void AddFriendReq::set_sex(::int32_t value) {
  _internal_set_sex(value);
  // @@protoc_insertion_point(field_set:message.AddFriendReq.sex)
}
inline ::int32_t AddFriendReq::_internal_sex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sex_;
}
inline void AddFriendReq::_internal_set_sex(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.sex_ = value;
}

// int32 touid = 7;
inline void AddFriendReq::clear_touid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = 0;
}
inline ::int32_t AddFriendReq::touid() const {
  // @@protoc_insertion_point(field_get:message.AddFriendReq.touid)
  return _internal_touid();
}
inline void AddFriendReq::set_touid(::int32_t value) {
  _internal_set_touid(value);
  // @@protoc_insertion_point(field_set:message.AddFriendReq.touid)
}
inline ::int32_t AddFriendReq::_internal_touid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.touid_;
}
inline void AddFriendReq::_internal_set_touid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.touid_ = value;
}

// -------------------------------------------------------------------

// AddFriendRsp

// int32 error = 1;
inline void AddFriendRsp::clear_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_ = 0;
}
inline ::int32_t AddFriendRsp::error() const {
  // @@protoc_insertion_point(field_get:message.AddFriendRsp.error)
  return _internal_error();
}
inline void AddFriendRsp::set_error(::int32_t value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:message.AddFriendRsp.error)
}
inline ::int32_t AddFriendRsp::_internal_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_;
}
inline void AddFriendRsp::_internal_set_error(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.error_ = value;
}

// int32 applyuid = 2;
inline void AddFriendRsp::clear_applyuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.applyuid_ = 0;
}
inline ::int32_t AddFriendRsp::applyuid() const {
  // @@protoc_insertion_point(field_get:message.AddFriendRsp.applyuid)
  return _internal_applyuid();
}
inline void AddFriendRsp::set_applyuid(::int32_t value) {
  _internal_set_applyuid(value);
  // @@protoc_insertion_point(field_set:message.AddFriendRsp.applyuid)
}
inline ::int32_t AddFriendRsp::_internal_applyuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.applyuid_;
}
inline void AddFriendRsp::_internal_set_applyuid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.applyuid_ = value;
}

// int32 touid = 3;
inline void AddFriendRsp::clear_touid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = 0;
}
inline ::int32_t AddFriendRsp::touid() const {
  // @@protoc_insertion_point(field_get:message.AddFriendRsp.touid)
  return _internal_touid();
}
inline void AddFriendRsp::set_touid(::int32_t value) {
  _internal_set_touid(value);
  // @@protoc_insertion_point(field_set:message.AddFriendRsp.touid)
}
inline ::int32_t AddFriendRsp::_internal_touid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.touid_;
}
inline void AddFriendRsp::_internal_set_touid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.touid_ = value;
}

// -------------------------------------------------------------------

// RplyFriendReq

// int32 rplyuid = 1;
inline void RplyFriendReq::clear_rplyuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rplyuid_ = 0;
}
inline ::int32_t RplyFriendReq::rplyuid() const {
  // @@protoc_insertion_point(field_get:message.RplyFriendReq.rplyuid)
  return _internal_rplyuid();
}
inline void RplyFriendReq::set_rplyuid(::int32_t value) {
  _internal_set_rplyuid(value);
  // @@protoc_insertion_point(field_set:message.RplyFriendReq.rplyuid)
}
inline ::int32_t RplyFriendReq::_internal_rplyuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rplyuid_;
}
inline void RplyFriendReq::_internal_set_rplyuid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rplyuid_ = value;
}

// bool agree = 2;
inline void RplyFriendReq::clear_agree() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.agree_ = false;
}
inline bool RplyFriendReq::agree() const {
  // @@protoc_insertion_point(field_get:message.RplyFriendReq.agree)
  return _internal_agree();
}
inline void RplyFriendReq::set_agree(bool value) {
  _internal_set_agree(value);
  // @@protoc_insertion_point(field_set:message.RplyFriendReq.agree)
}
inline bool RplyFriendReq::_internal_agree() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.agree_;
}
inline void RplyFriendReq::_internal_set_agree(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.agree_ = value;
}

// int32 touid = 3;
inline void RplyFriendReq::clear_touid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = 0;
}
inline ::int32_t RplyFriendReq::touid() const {
  // @@protoc_insertion_point(field_get:message.RplyFriendReq.touid)
  return _internal_touid();
}
inline void RplyFriendReq::set_touid(::int32_t value) {
  _internal_set_touid(value);
  // @@protoc_insertion_point(field_set:message.RplyFriendReq.touid)
}
inline ::int32_t RplyFriendReq::_internal_touid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.touid_;
}
inline void RplyFriendReq::_internal_set_touid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.touid_ = value;
}

// -------------------------------------------------------------------

// RplyFriendRsp

// int32 error = 1;
inline void RplyFriendRsp::clear_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_ = 0;
}
inline ::int32_t RplyFriendRsp::error() const {
  // @@protoc_insertion_point(field_get:message.RplyFriendRsp.error)
  return _internal_error();
}
inline void RplyFriendRsp::set_error(::int32_t value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:message.RplyFriendRsp.error)
}
inline ::int32_t RplyFriendRsp::_internal_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_;
}
inline void RplyFriendRsp::_internal_set_error(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.error_ = value;
}

// int32 rplyuid = 2;
inline void RplyFriendRsp::clear_rplyuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rplyuid_ = 0;
}
inline ::int32_t RplyFriendRsp::rplyuid() const {
  // @@protoc_insertion_point(field_get:message.RplyFriendRsp.rplyuid)
  return _internal_rplyuid();
}
inline void RplyFriendRsp::set_rplyuid(::int32_t value) {
  _internal_set_rplyuid(value);
  // @@protoc_insertion_point(field_set:message.RplyFriendRsp.rplyuid)
}
inline ::int32_t RplyFriendRsp::_internal_rplyuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rplyuid_;
}
inline void RplyFriendRsp::_internal_set_rplyuid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rplyuid_ = value;
}

// int32 touid = 3;
inline void RplyFriendRsp::clear_touid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = 0;
}
inline ::int32_t RplyFriendRsp::touid() const {
  // @@protoc_insertion_point(field_get:message.RplyFriendRsp.touid)
  return _internal_touid();
}
inline void RplyFriendRsp::set_touid(::int32_t value) {
  _internal_set_touid(value);
  // @@protoc_insertion_point(field_set:message.RplyFriendRsp.touid)
}
inline ::int32_t RplyFriendRsp::_internal_touid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.touid_;
}
inline void RplyFriendRsp::_internal_set_touid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.touid_ = value;
}

// -------------------------------------------------------------------

// SendChatMsgReq

// int32 fromuid = 1;
inline void SendChatMsgReq::clear_fromuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fromuid_ = 0;
}
inline ::int32_t SendChatMsgReq::fromuid() const {
  // @@protoc_insertion_point(field_get:message.SendChatMsgReq.fromuid)
  return _internal_fromuid();
}
inline void SendChatMsgReq::set_fromuid(::int32_t value) {
  _internal_set_fromuid(value);
  // @@protoc_insertion_point(field_set:message.SendChatMsgReq.fromuid)
}
inline ::int32_t SendChatMsgReq::_internal_fromuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fromuid_;
}
inline void SendChatMsgReq::_internal_set_fromuid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fromuid_ = value;
}

// int32 touid = 2;
inline void SendChatMsgReq::clear_touid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = 0;
}
inline ::int32_t SendChatMsgReq::touid() const {
  // @@protoc_insertion_point(field_get:message.SendChatMsgReq.touid)
  return _internal_touid();
}
inline void SendChatMsgReq::set_touid(::int32_t value) {
  _internal_set_touid(value);
  // @@protoc_insertion_point(field_set:message.SendChatMsgReq.touid)
}
inline ::int32_t SendChatMsgReq::_internal_touid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.touid_;
}
inline void SendChatMsgReq::_internal_set_touid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.touid_ = value;
}

// string message = 3;
inline void SendChatMsgReq::clear_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& SendChatMsgReq::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.SendChatMsgReq.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendChatMsgReq::set_message(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.SendChatMsgReq.message)
}
inline std::string* SendChatMsgReq::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:message.SendChatMsgReq.message)
  return _s;
}
inline const std::string& SendChatMsgReq::_internal_message() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.message_.Get();
}
inline void SendChatMsgReq::_internal_set_message(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(value, GetArena());
}
inline std::string* SendChatMsgReq::_internal_mutable_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* SendChatMsgReq::release_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.SendChatMsgReq.message)
  return _impl_.message_.Release();
}
inline void SendChatMsgReq::set_allocated_message(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.message_.IsDefault()) {
          _impl_.message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.SendChatMsgReq.message)
}

// -------------------------------------------------------------------

// SendChatMsgRsp

// int32 error = 1;
inline void SendChatMsgRsp::clear_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_ = 0;
}
inline ::int32_t SendChatMsgRsp::error() const {
  // @@protoc_insertion_point(field_get:message.SendChatMsgRsp.error)
  return _internal_error();
}
inline void SendChatMsgRsp::set_error(::int32_t value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:message.SendChatMsgRsp.error)
}
inline ::int32_t SendChatMsgRsp::_internal_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_;
}
inline void SendChatMsgRsp::_internal_set_error(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.error_ = value;
}

// int32 fromuid = 2;
inline void SendChatMsgRsp::clear_fromuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fromuid_ = 0;
}
inline ::int32_t SendChatMsgRsp::fromuid() const {
  // @@protoc_insertion_point(field_get:message.SendChatMsgRsp.fromuid)
  return _internal_fromuid();
}
inline void SendChatMsgRsp::set_fromuid(::int32_t value) {
  _internal_set_fromuid(value);
  // @@protoc_insertion_point(field_set:message.SendChatMsgRsp.fromuid)
}
inline ::int32_t SendChatMsgRsp::_internal_fromuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fromuid_;
}
inline void SendChatMsgRsp::_internal_set_fromuid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fromuid_ = value;
}

// int32 touid = 3;
inline void SendChatMsgRsp::clear_touid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = 0;
}
inline ::int32_t SendChatMsgRsp::touid() const {
  // @@protoc_insertion_point(field_get:message.SendChatMsgRsp.touid)
  return _internal_touid();
}
inline void SendChatMsgRsp::set_touid(::int32_t value) {
  _internal_set_touid(value);
  // @@protoc_insertion_point(field_set:message.SendChatMsgRsp.touid)
}
inline ::int32_t SendChatMsgRsp::_internal_touid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.touid_;
}
inline void SendChatMsgRsp::_internal_set_touid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.touid_ = value;
}

// -------------------------------------------------------------------

// AuthFriendReq

// int32 fromuid = 1;
inline void AuthFriendReq::clear_fromuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fromuid_ = 0;
}
inline ::int32_t AuthFriendReq::fromuid() const {
  // @@protoc_insertion_point(field_get:message.AuthFriendReq.fromuid)
  return _internal_fromuid();
}
inline void AuthFriendReq::set_fromuid(::int32_t value) {
  _internal_set_fromuid(value);
  // @@protoc_insertion_point(field_set:message.AuthFriendReq.fromuid)
}
inline ::int32_t AuthFriendReq::_internal_fromuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fromuid_;
}
inline void AuthFriendReq::_internal_set_fromuid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fromuid_ = value;
}

// int32 touid = 2;
inline void AuthFriendReq::clear_touid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = 0;
}
inline ::int32_t AuthFriendReq::touid() const {
  // @@protoc_insertion_point(field_get:message.AuthFriendReq.touid)
  return _internal_touid();
}
inline void AuthFriendReq::set_touid(::int32_t value) {
  _internal_set_touid(value);
  // @@protoc_insertion_point(field_set:message.AuthFriendReq.touid)
}
inline ::int32_t AuthFriendReq::_internal_touid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.touid_;
}
inline void AuthFriendReq::_internal_set_touid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.touid_ = value;
}

// -------------------------------------------------------------------

// AuthFriendRsp

// int32 error = 1;
inline void AuthFriendRsp::clear_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_ = 0;
}
inline ::int32_t AuthFriendRsp::error() const {
  // @@protoc_insertion_point(field_get:message.AuthFriendRsp.error)
  return _internal_error();
}
inline void AuthFriendRsp::set_error(::int32_t value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:message.AuthFriendRsp.error)
}
inline ::int32_t AuthFriendRsp::_internal_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_;
}
inline void AuthFriendRsp::_internal_set_error(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.error_ = value;
}

// int32 fromuid = 2;
inline void AuthFriendRsp::clear_fromuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fromuid_ = 0;
}
inline ::int32_t AuthFriendRsp::fromuid() const {
  // @@protoc_insertion_point(field_get:message.AuthFriendRsp.fromuid)
  return _internal_fromuid();
}
inline void AuthFriendRsp::set_fromuid(::int32_t value) {
  _internal_set_fromuid(value);
  // @@protoc_insertion_point(field_set:message.AuthFriendRsp.fromuid)
}
inline ::int32_t AuthFriendRsp::_internal_fromuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fromuid_;
}
inline void AuthFriendRsp::_internal_set_fromuid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fromuid_ = value;
}

// int32 touid = 3;
inline void AuthFriendRsp::clear_touid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = 0;
}
inline ::int32_t AuthFriendRsp::touid() const {
  // @@protoc_insertion_point(field_get:message.AuthFriendRsp.touid)
  return _internal_touid();
}
inline void AuthFriendRsp::set_touid(::int32_t value) {
  _internal_set_touid(value);
  // @@protoc_insertion_point(field_set:message.AuthFriendRsp.touid)
}
inline ::int32_t AuthFriendRsp::_internal_touid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.touid_;
}
inline void AuthFriendRsp::_internal_set_touid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.touid_ = value;
}

// -------------------------------------------------------------------

// TextChatMsgReq

// int32 fromuid = 1;
inline void TextChatMsgReq::clear_fromuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fromuid_ = 0;
}
inline ::int32_t TextChatMsgReq::fromuid() const {
  // @@protoc_insertion_point(field_get:message.TextChatMsgReq.fromuid)
  return _internal_fromuid();
}
inline void TextChatMsgReq::set_fromuid(::int32_t value) {
  _internal_set_fromuid(value);
  // @@protoc_insertion_point(field_set:message.TextChatMsgReq.fromuid)
}
inline ::int32_t TextChatMsgReq::_internal_fromuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fromuid_;
}
inline void TextChatMsgReq::_internal_set_fromuid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fromuid_ = value;
}

// int32 touid = 2;
inline void TextChatMsgReq::clear_touid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = 0;
}
inline ::int32_t TextChatMsgReq::touid() const {
  // @@protoc_insertion_point(field_get:message.TextChatMsgReq.touid)
  return _internal_touid();
}
inline void TextChatMsgReq::set_touid(::int32_t value) {
  _internal_set_touid(value);
  // @@protoc_insertion_point(field_set:message.TextChatMsgReq.touid)
}
inline ::int32_t TextChatMsgReq::_internal_touid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.touid_;
}
inline void TextChatMsgReq::_internal_set_touid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.touid_ = value;
}

// repeated .message.TextChatData textmsgs = 3;
inline int TextChatMsgReq::_internal_textmsgs_size() const {
  return _internal_textmsgs().size();
}
inline int TextChatMsgReq::textmsgs_size() const {
  return _internal_textmsgs_size();
}
inline void TextChatMsgReq::clear_textmsgs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.textmsgs_.Clear();
}
inline ::message::TextChatData* TextChatMsgReq::mutable_textmsgs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:message.TextChatMsgReq.textmsgs)
  return _internal_mutable_textmsgs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::message::TextChatData>* TextChatMsgReq::mutable_textmsgs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:message.TextChatMsgReq.textmsgs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_textmsgs();
}
inline const ::message::TextChatData& TextChatMsgReq::textmsgs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.TextChatMsgReq.textmsgs)
  return _internal_textmsgs().Get(index);
}
inline ::message::TextChatData* TextChatMsgReq::add_textmsgs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::message::TextChatData* _add = _internal_mutable_textmsgs()->Add();
  // @@protoc_insertion_point(field_add:message.TextChatMsgReq.textmsgs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::message::TextChatData>& TextChatMsgReq::textmsgs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:message.TextChatMsgReq.textmsgs)
  return _internal_textmsgs();
}
inline const ::google::protobuf::RepeatedPtrField<::message::TextChatData>&
TextChatMsgReq::_internal_textmsgs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.textmsgs_;
}
inline ::google::protobuf::RepeatedPtrField<::message::TextChatData>*
TextChatMsgReq::_internal_mutable_textmsgs() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.textmsgs_;
}

// -------------------------------------------------------------------

// TextChatData

// string msgid = 1;
inline void TextChatData::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_.ClearToEmpty();
}
inline const std::string& TextChatData::msgid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.TextChatData.msgid)
  return _internal_msgid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TextChatData::set_msgid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msgid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.TextChatData.msgid)
}
inline std::string* TextChatData::mutable_msgid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msgid();
  // @@protoc_insertion_point(field_mutable:message.TextChatData.msgid)
  return _s;
}
inline const std::string& TextChatData::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msgid_.Get();
}
inline void TextChatData::_internal_set_msgid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msgid_.Set(value, GetArena());
}
inline std::string* TextChatData::_internal_mutable_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msgid_.Mutable( GetArena());
}
inline std::string* TextChatData::release_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.TextChatData.msgid)
  return _impl_.msgid_.Release();
}
inline void TextChatData::set_allocated_msgid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msgid_.IsDefault()) {
          _impl_.msgid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.TextChatData.msgid)
}

// string msgcontent = 2;
inline void TextChatData::clear_msgcontent() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgcontent_.ClearToEmpty();
}
inline const std::string& TextChatData::msgcontent() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.TextChatData.msgcontent)
  return _internal_msgcontent();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TextChatData::set_msgcontent(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msgcontent_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.TextChatData.msgcontent)
}
inline std::string* TextChatData::mutable_msgcontent() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msgcontent();
  // @@protoc_insertion_point(field_mutable:message.TextChatData.msgcontent)
  return _s;
}
inline const std::string& TextChatData::_internal_msgcontent() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msgcontent_.Get();
}
inline void TextChatData::_internal_set_msgcontent(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msgcontent_.Set(value, GetArena());
}
inline std::string* TextChatData::_internal_mutable_msgcontent() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.msgcontent_.Mutable( GetArena());
}
inline std::string* TextChatData::release_msgcontent() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.TextChatData.msgcontent)
  return _impl_.msgcontent_.Release();
}
inline void TextChatData::set_allocated_msgcontent(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgcontent_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msgcontent_.IsDefault()) {
          _impl_.msgcontent_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.TextChatData.msgcontent)
}

// -------------------------------------------------------------------

// TextChatMsgRsp

// int32 error = 1;
inline void TextChatMsgRsp::clear_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_ = 0;
}
inline ::int32_t TextChatMsgRsp::error() const {
  // @@protoc_insertion_point(field_get:message.TextChatMsgRsp.error)
  return _internal_error();
}
inline void TextChatMsgRsp::set_error(::int32_t value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:message.TextChatMsgRsp.error)
}
inline ::int32_t TextChatMsgRsp::_internal_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_;
}
inline void TextChatMsgRsp::_internal_set_error(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.error_ = value;
}

// int32 fromuid = 2;
inline void TextChatMsgRsp::clear_fromuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fromuid_ = 0;
}
inline ::int32_t TextChatMsgRsp::fromuid() const {
  // @@protoc_insertion_point(field_get:message.TextChatMsgRsp.fromuid)
  return _internal_fromuid();
}
inline void TextChatMsgRsp::set_fromuid(::int32_t value) {
  _internal_set_fromuid(value);
  // @@protoc_insertion_point(field_set:message.TextChatMsgRsp.fromuid)
}
inline ::int32_t TextChatMsgRsp::_internal_fromuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fromuid_;
}
inline void TextChatMsgRsp::_internal_set_fromuid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fromuid_ = value;
}

// int32 touid = 3;
inline void TextChatMsgRsp::clear_touid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = 0;
}
inline ::int32_t TextChatMsgRsp::touid() const {
  // @@protoc_insertion_point(field_get:message.TextChatMsgRsp.touid)
  return _internal_touid();
}
inline void TextChatMsgRsp::set_touid(::int32_t value) {
  _internal_set_touid(value);
  // @@protoc_insertion_point(field_set:message.TextChatMsgRsp.touid)
}
inline ::int32_t TextChatMsgRsp::_internal_touid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.touid_;
}
inline void TextChatMsgRsp::_internal_set_touid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.touid_ = value;
}

// repeated .message.TextChatData textmsgs = 4;
inline int TextChatMsgRsp::_internal_textmsgs_size() const {
  return _internal_textmsgs().size();
}
inline int TextChatMsgRsp::textmsgs_size() const {
  return _internal_textmsgs_size();
}
inline void TextChatMsgRsp::clear_textmsgs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.textmsgs_.Clear();
}
inline ::message::TextChatData* TextChatMsgRsp::mutable_textmsgs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:message.TextChatMsgRsp.textmsgs)
  return _internal_mutable_textmsgs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::message::TextChatData>* TextChatMsgRsp::mutable_textmsgs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:message.TextChatMsgRsp.textmsgs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_textmsgs();
}
inline const ::message::TextChatData& TextChatMsgRsp::textmsgs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.TextChatMsgRsp.textmsgs)
  return _internal_textmsgs().Get(index);
}
inline ::message::TextChatData* TextChatMsgRsp::add_textmsgs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::message::TextChatData* _add = _internal_mutable_textmsgs()->Add();
  // @@protoc_insertion_point(field_add:message.TextChatMsgRsp.textmsgs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::message::TextChatData>& TextChatMsgRsp::textmsgs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:message.TextChatMsgRsp.textmsgs)
  return _internal_textmsgs();
}
inline const ::google::protobuf::RepeatedPtrField<::message::TextChatData>&
TextChatMsgRsp::_internal_textmsgs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.textmsgs_;
}
inline ::google::protobuf::RepeatedPtrField<::message::TextChatData>*
TextChatMsgRsp::_internal_mutable_textmsgs() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.textmsgs_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace message


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_message_2eproto_2epb_2eh
